import glob
import os
import re

Import('env')

objects = []
host_sources = ['gcd.cpp', 'openmp.cpp', 'reduced_math.cpp'] 
device_sources = ['enact.cu', 'introspect.cu', 'save_array.cu', 'permute.cu', 'rotate.cu', 'smem_shuffle.cu', 'memory_shuffle.cu', 'skinny.cu', 'timer.cu']

nvcc_exists = env.Detect('nvcc')
if nvcc_exists:
    inplace = env.Library('inplace', device_sources + host_sources)
else:
    inplace = env.Library('inplace', host_sources)
    
Return('inplace')

